/* Modal Overlay */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  padding: 1rem;
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.modal {
  background: var(--base-bg);
  border-radius: 12px;
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow: hidden;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  animation: modalSlideIn 0.3s ease-out;
  transform-origin: center;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes modalSlideOut {
  from {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  to {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
}

.fadeOut {
  animation: fadeOut 0.3s ease-in;
}

.modalSlideOut {
  animation: modalSlideOut 0.3s ease-in;
}

/* Modal Header */
.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  border-bottom: 1px solid var(--border-color);
  background: var(--primary-color);
  color: white;
}

.modalTitle {
  color: white;
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0;
}

.closeBtn {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  transition: all 0.2s ease-in-out;
  transform: scale(1);
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.closeBtn:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.1);
}

.closeBtn:active {
  transform: scale(0.95);
}

.closeBtn:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Modal Body */
.modalBody {
  padding: 1.5rem;
  overflow-y: auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

/* User Type Selection */
.userTypeSelection {
  text-align: center;
}

.selectionTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-dark);
  margin: 0 0 1.5rem 0;
}

.userTypeGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
}

.userTypeButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
  padding: 1.5rem 1rem;
  border: 2px solid var(--border-color);
  border-radius: 8px;
  background: var(--base-bg);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-dark);
}

.userTypeButton:hover {
  border-color: var(--primary-color);
  background: var(--separator-bg);
  transform: translateY(-2px);
  box-shadow: var(--shadow);
}

.userTypeIcon {
  font-size: 2rem;
  color: var(--primary-color);
}

/* User Form */
.userForm {
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.selectedUserType {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem 1.25rem;
  background: var(--separator-bg);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  margin-bottom: 1.5rem;
  font-weight: 600;
  color: var(--text-dark);
}

.selectedUserType svg {
  font-size: 1.25rem;
  color: var(--primary-color);
}

.changeTypeButton {
  margin-right: auto;
  background: none;
  border: 1px solid var(--border-color);
  color: var(--primary-color);
  padding: 0.375rem 0.75rem;
  border-radius: 6px;
  font-size: 0.75rem;
  cursor: pointer;
  transition: all 0.2s;
  font-weight: 500;
}

.changeTypeButton:hover {
  background: var(--primary-color);
  color: white;
}

.changeTypeButton:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Form Styles */
.form {
  width: 100%;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.25rem;
  margin-bottom: 2rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* Fade in animation for conditional fields */
.fadeIn {
  animation: fadeInFields 0.3s ease-out;
}

@keyframes fadeInFields {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.formLabel {
  color: var(--text-dark);
  font-weight: 600;
  font-size: 1rem;
}

.formInput {
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  font-size: 0.95rem;
  color: var(--text-dark);
  background: var(--base-bg);
  transition: border-color 0.3s ease;
}

.formInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 61, 50, 0.1);
}

.formInput:disabled {
  background: var(--separator-bg);
  cursor: not-allowed;
  opacity: 0.7;
}

/* Password Input Wrapper */
.passwordInputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.passwordInputWrapper .formInput {
  padding-left: 3rem; /* Make space for the toggle button */
}

.passwordToggleBtn {
  position: absolute;
  left: 0.75rem;
  background: none;
  border: none;
  color: var(--text-light);
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 4px;
  transition: color 0.2s ease;
  font-size: 1rem;
}

.passwordToggleBtn:hover {
  color: var(--primary-color);
}

.passwordToggleBtn:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Form Actions */
.formActions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  padding: 1.5rem;
  border-top: 1px solid var(--border-color);
}

.cancelButton {
  background: var(--separator-bg);
  color: var(--text-dark);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  font-size: 0.95rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.cancelButton:hover {
  background: var(--border-color);
}

.cancelButton:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.submitButton {
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 6px;
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  font-size: 0.95rem;
  font-weight: 500;
  transition: background 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.submitButton:hover {
  background: var(--secondary-color);
  opacity: 0.8;
}

.submitButton:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

/* Loading Spinner */
.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .modalOverlay {
    padding: 0.5rem;
  }

  .modalHeader,
  .modalBody,
  .formActions {
    padding: 1rem;
  }

  .modalTitle {
    font-size: 1.25rem;
  }

  .formGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .userTypeGrid {
    grid-template-columns: 1fr;
  }

  .formActions {
    flex-direction: column;
  }

  .cancelButton,
  .submitButton {
    width: 100%;
  }
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .modalOverlay,
  .modal,
  .closeBtn {
    animation: none;
    transition: none;
  }
}
